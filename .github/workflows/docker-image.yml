name: docker-Container

on:
  push:
    branches: none # [ "master" ]
  pull_request:
    branches: none # [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: secret
        ports:
          - 3306:3306
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, exif, pcntl
      - name: Install Composer Dependencies
        run: composer install
      - name: Docker ps
        run: docker ps
      - name: Create Environment File
        run: cp .env.example.docker .env
      - name: Generate Application Key
        run: php artisan key:generate
      - name: Run Migrations
        run: php artisan migrate --force
      - name: Run Seeder
        run: php artisan db:seed
      - name: Run Tests
        #        run: vendor/bin/phpunit
        run: php artisan test
    env:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: test_db
      DB_USERNAME: test_user
      DB_PASSWORD: secret
      REDIS_HOST: redis
      REDIS_PORT: 6379
